#!/bin/sh

# Update ~/.aws/config with clipboard data from https://ei.awsapps.com/start#/

readonly AWS_CONFIG_FILE="${HOME}/.aws/config"

TMPFILE=$(mktemp "${TMPDIR:-/tmp}/${$}.XXXXXX") || exit 201
readonly TMPFILE
trap "rm -f -- '""${TMPFILE}""'" HUP INT PIPE ALRM TERM USR1 USR2 EXIT

_exit() {
	# shellcheck disable=SC3043
	local rc="${1:-1}"
	test "${rc}" -gt 0 2>/dev/null && shift || rc=1
	echo "${*}" >&2
	exit "${rc}"
}

is_aws_keyword() {
	test "_${1}" != '_aws_access_key_id' || return 0
	test "_${1}" != '_aws_secret_access_key' || return 0
	test "_${1}" != '_aws_session_token' || return 0
	return 1
}

##########
## main()
##########
if [ -t 0 ]; then
	# shellcheck disable=SC3028
	if [ "${OSTYPE}" != "${OSTYPE#darwin}" ]; then
		pbpaste >"${TMPFILE}"
	else
		xsel --clipboard --nodetach --output >"${TMPFILE}"
	fi
else
	# save data from stdin
	cat >"${TMPFILE}"
fi

while read -r s || test -n "${s}"; do
	if [ "_${s}" != "_${s#*\[}" ]; then
		account_id="${s%%_*}"
		account_id="${account_id##*[}"
		test "${s%%_ReadOnlyWithSessionManagerAccess*}" = "${s}" || account_suffix='-ssm'
		continue
	fi
	# shellcheck disable=SC2086
	set -- ${s%%=*} ${s#*=}
	test -n "${2}" && is_aws_keyword "${1}" && eval "${1}='${2}'"
done <"${TMPFILE}"

test -n "${account_id}" || _exit "account_id not found"
# shellcheck disable=SC2154
test -n "${aws_access_key_id}" || _exit "aws_access_key_id not found"
# shellcheck disable=SC2154
test -n "${aws_secret_access_key}" || _exit "aws_secret_access_key not found"

printf '' >"${TMPFILE}"
while read -r s; do
	if [ "_${s}" != "_${s##\[profile*\]}" ]; then
		ss="${s##\[profile*\]*#}"
		# shellcheck disable=SC2086
		set -- ${ss}
		unset found
		test "_${1}" != "_${account_id}${account_suffix}" || found=1
	elif [ -n "${found}" ]; then
		# shellcheck disable=SC2086
		set -- ${s%%=*} ${s#*=}
		if is_aws_keyword "${1}" && eval "test -n \"\${${1}}\""; then
			eval "echo \"${1}=\${${1}}\"" >>"${TMPFILE}"
			patched="${patched}${patched:+, }${1}"
			continue
		fi
	fi
	echo "${s}" >>"${TMPFILE}"
done <"${AWS_CONFIG_FILE}"

test -n "${patched}" || exit 0
mv -f -- "${AWS_CONFIG_FILE}" "${AWS_CONFIG_FILE}.orig" &&
	mv -f -- "${TMPFILE}" "${AWS_CONFIG_FILE}" &&
	echo "Successfully patched account ${account_id}${account_suffix} with ${patched}." >&2
